aaply(sentence.list$sent.id,sentence.list$year,length)
speech.list$sentence
speech.list$sentence=aggregate(sentence.list,sentence.list$year,nrow)
speech.list$sentence
speech.list$sentence=aggregate(sentence.list,list(sentence.list$year),nrow)
sentence.list
View(sentence.list)
#abtract the year of the speech
speech.list$year = rep(NA,nrow(speech.list))
for ( i in 1:nrow(speech.list))
{  n = nchar(speech.list$Date[i])
speech.list$year[i] = as.numeric(substring(speech.list$Date[i],n-3,n))
}
#plot the speech length vs year
ggplot(data = speech.list)+
geom_point(mapping = aes(x=year,y=Words,color=Party))+
geom_smooth(mapping = aes(x=year,y=Words),method="lm",se=F)+
labs(list(title = "Speech Length (in words)", x = "Year", y = "words in speech"))+
theme(plot.title = element_text(size = 20, face = "bold",hjust = 0.5))
packages.used=c("rvest", "xml2", "qdap",
"syuzhet", "ggplot2", "tm",
"tidytext","reshape2")
# check packages that need to be installed.
packages.needed=setdiff(packages.used,
intersect(installed.packages()[,1],
packages.used))
# install additional packages
if(length(packages.needed)>0){
install.packages(packages.needed, dependencies = TRUE)
}
# load packages
library("rvest")
library("xml2")
library("qdap")
library("syuzhet")
library("ggplot2")
library("tm")
library("tidytext")
library("reshape2")
source("../lib/speechFuncs.R")
print(R.version)
main.page <- read_html(x = "http://www.presidency.ucsb.edu/inaugurals.php")
# Get link URLs
# f.speechlinks is a function for extracting links from the list of speeches.
inaug=f.speechlinks(main.page)
inaug=inaug[-nrow(inaug),] # remove the last line, irrelevant due to error.
#read in the csv data set
inaug.list=read.csv("../data/inauglist.csv", stringsAsFactors = FALSE)
speech.list=cbind(inaug.list, inaug)
speech.list=speech.list[,-5]
#delete the date column due to formatting error
colnames(speech.list)[colnames(speech.list)=="links"]="Date"
#name the correct date
# Loop over each row in speech.list
speech.list$fulltext=NA
for(i in seq(nrow(speech.list))) {
text <- read_html(speech.list$urls[i]) %>% # load the page
html_nodes(".displaytext") %>% # isloate the text
html_text() # get the text
speech.list$fulltext[i]=text
# Create the file name
filename <- paste0("../data/InauguralSpeeches/",
speech.list$File[i], "-",
speech.list$Term[i], ".txt")
sink(file = filename) %>% # open file to write
cat(text)  # write the file
sink() # close the file
}
sentence.list=NULL
for(i in 1:nrow(speech.list)){
sentences=sent_detect(speech.list$fulltext[i],
endmarks = c("?", ".", "!", "|",";"))
if(length(sentences)>0){
word.count=word_count(sentences)
sentence.list=rbind(sentence.list,
cbind(speech.list[i,-ncol(speech.list)],
sentences=as.character(sentences),
word.count,
sent.id=1:length(sentences)
)
)
}
}
sentence.list=sentence.list[!is.na(sentence.list$word.count),]
#delete lines of non-sentences.
#abtract the year of the speech
speech.list$year = rep(NA,nrow(speech.list))
for ( i in 1:nrow(speech.list))
{  n = nchar(speech.list$Date[i])
speech.list$year[i] = as.numeric(substring(speech.list$Date[i],n-3,n))
}
#plot the speech length vs year
ggplot(data = speech.list)+
geom_point(mapping = aes(x=year,y=Words,color=Party))+
geom_smooth(mapping = aes(x=year,y=Words),method="lm",se=F)+
labs(list(title = "Speech Length (in words)", x = "Year", y = "words in speech"))+
theme(plot.title = element_text(size = 20, face = "bold",hjust = 0.5))
View(speech.list)
speech.list.new=speech.list[-which.max(speech.list$Words),]
speech.list.new=speech.list.new[-which.min(speech.list.new$Words),]
#plot the speech length (without outliers) vs year
ggplot(data = speech.list.new)+
geom_point(mapping = aes(x=year,y=Words,color=Party))+
geom_smooth(mapping = aes(x=year,y=Words),method="lm",se=F)+
labs(list(title = "Speech Length (without outliers)", x = "Year", y = "words in speech"))+
theme(plot.title = element_text(size = 20, face = "bold",hjust = 0.5))
speech.list$sentence
speech.list$sentence=tapply(sentence.list,sentence.list$year,nrow)
speech.list$sentence
speech.list$sentence=tapply(sentence.list$sent.id,sentence.list$year,nrow)
View(speech.list2)
packages.used=c("rvest", "xml2", "qdap",
"syuzhet", "ggplot2", "tm",
"tidytext","reshape2")
# check packages that need to be installed.
packages.needed=setdiff(packages.used,
intersect(installed.packages()[,1],
packages.used))
# install additional packages
if(length(packages.needed)>0){
install.packages(packages.needed, dependencies = TRUE)
}
# load packages
library("rvest")
library("xml2")
library("qdap")
library("syuzhet")
library("ggplot2")
library("tm")
library("tidytext")
library("reshape2")
source("../lib/speechFuncs.R")
print(R.version)
main.page <- read_html(x = "http://www.presidency.ucsb.edu/inaugurals.php")
# Get link URLs
# f.speechlinks is a function for extracting links from the list of speeches.
inaug=f.speechlinks(main.page)
inaug=inaug[-nrow(inaug),] # remove the last line, irrelevant due to error.
#read in the csv data set
inaug.list=read.csv("../data/inauglist.csv", stringsAsFactors = FALSE)
speech.list=cbind(inaug.list, inaug)
speech.list=speech.list[,-5]
#delete the date column due to formatting error
colnames(speech.list)[colnames(speech.list)=="links"]="Date"
#name the correct date
# Loop over each row in speech.list
speech.list$fulltext=NA
for(i in seq(nrow(speech.list))) {
text <- read_html(speech.list$urls[i]) %>% # load the page
html_nodes(".displaytext") %>% # isloate the text
html_text() # get the text
speech.list$fulltext[i]=text
# Create the file name
filename <- paste0("../data/InauguralSpeeches/",
speech.list$File[i], "-",
speech.list$Term[i], ".txt")
sink(file = filename) %>% # open file to write
cat(text)  # write the file
sink() # close the file
}
sentence.list=NULL
for(i in 1:nrow(speech.list)){
sentences=sent_detect(speech.list$fulltext[i],
endmarks = c("?", ".", "!", "|",";"))
if(length(sentences)>0){
word.count=word_count(sentences)
sentence.list=rbind(sentence.list,
cbind(speech.list[i,-ncol(speech.list)],
sentences=as.character(sentences),
word.count,
sent.id=1:length(sentences)
)
)
}
}
sentence.list=sentence.list[!is.na(sentence.list$word.count),]
#delete lines of non-sentences.
#abtract the year of the speech
speech.list$year = rep(NA,nrow(speech.list))
for ( i in 1:nrow(speech.list))
{  n = nchar(speech.list$Date[i])
speech.list$year[i] = as.numeric(substring(speech.list$Date[i],n-3,n))
}
#plot the speech length vs year
ggplot(data = speech.list)+
geom_point(mapping = aes(x=year,y=Words,color=Party))+
geom_smooth(mapping = aes(x=year,y=Words),method="lm",se=F)+
labs(list(title = "Speech Length (in words)", x = "Year", y = "words in speech"))+
theme(plot.title = element_text(size = 20, face = "bold",hjust = 0.5))
speech.list[which.max(speech.list$Words),c("President","year","Words")]
speech.list[which.min(speech.list$Words),c("President","year","Words")]
speech.list.new=speech.list[-which.max(speech.list$Words),]
speech.list.new=speech.list.new[-which.min(speech.list.new$Words),]
#plot the speech length (without outliers) vs year
ggplot(data = speech.list.new)+
geom_point(mapping = aes(x=year,y=Words,color=Party))+
geom_smooth(mapping = aes(x=year,y=Words),method="lm",se=F)+
labs(list(title = "Speech Length (without outliers)", x = "Year", y = "words in speech"))+
theme(plot.title = element_text(size = 20, face = "bold",hjust = 0.5))
packages.used=c("rvest", "xml2", "qdap",
"syuzhet", "ggplot2", "tm",
"tidytext","reshape2")
# check packages that need to be installed.
packages.needed=setdiff(packages.used,
intersect(installed.packages()[,1],
packages.used))
# install additional packages
if(length(packages.needed)>0){
install.packages(packages.needed, dependencies = TRUE)
}
# load packages
library("rvest")
library("xml2")
library("qdap")
library("syuzhet")
library("ggplot2")
library("tm")
library("tidytext")
library("reshape2")
source("../lib/speechFuncs.R")
print(R.version)
main.page <- read_html(x = "http://www.presidency.ucsb.edu/inaugurals.php")
# Get link URLs
# f.speechlinks is a function for extracting links from the list of speeches.
inaug=f.speechlinks(main.page)
inaug=inaug[-nrow(inaug),] # remove the last line, irrelevant due to error.
#read in the csv data set
inaug.list=read.csv("../data/inauglist.csv", stringsAsFactors = FALSE)
speech.list=cbind(inaug.list, inaug)
speech.list=speech.list[,-5]
#delete the date column due to formatting error
colnames(speech.list)[colnames(speech.list)=="links"]="Date"
#name the correct date
#abtract the year of the speech
speech.list$year = rep(NA,nrow(speech.list))
for ( i in 1:nrow(speech.list))
{  n = nchar(speech.list$Date[i])
speech.list$year[i] = as.numeric(substring(speech.list$Date[i],n-3,n))
}
# Loop over each row in speech.list
speech.list$fulltext=NA
for(i in seq(nrow(speech.list))) {
text <- read_html(speech.list$urls[i]) %>% # load the page
html_nodes(".displaytext") %>% # isloate the text
html_text() # get the text
speech.list$fulltext[i]=text
# Create the file name
filename <- paste0("../data/InauguralSpeeches/",
speech.list$File[i], "-",
speech.list$Term[i], ".txt")
sink(file = filename) %>% # open file to write
cat(text)  # write the file
sink() # close the file
}
sentence.list=NULL
for(i in 1:nrow(speech.list)){
sentences=sent_detect(speech.list$fulltext[i],
endmarks = c("?", ".", "!", "|",";"))
if(length(sentences)>0){
word.count=word_count(sentences)
sentence.list=rbind(sentence.list,
cbind(speech.list[i,-ncol(speech.list)],
sentences=as.character(sentences),
word.count,
sent.id=1:length(sentences)
)
)
}
}
sentence.list=sentence.list[!is.na(sentence.list$word.count),]
#delete lines of non-sentences.
speech.list$word.count=tapply(sentence.list$word.count,sentence.list$year,mean)
ggplot(data = speech.list)+
geom_point(mapping = aes(x=year,y=word.count,color=Party))+
geom_smooth(mapping = aes(x=year,y=word.count),se=F,method="lm")
speech.list$sentence
speech.list$sentence=tapply(sentence.list$sent.id,sentence.list$year,length)
ggplot(data = speech.list)+
geom_point(mapping = aes(x=year,y=sentence,color=Party))+
geom_smooth(aes(x=year,y=sentence),se=F,method="lm")
speech.list$sentence=tapply(sentence.list$sent.id,sentence.list$year,length)
ggplot(data = speech.list)+
geom_point(mapping = aes(x=year,y=sentence,color=Party))+
geom_smooth(aes(x=year,y=sentence),se=F,method="lm")
speech.list.new=speech.list[-which.max(speech.list$Words),]
speech.list.new=speech.list.new[-which.min(speech.list.new$Words),]
#plot the speech length (in words) (without outliers) vs year
ggplot(data = speech.list.new)+
geom_point(mapping = aes(x=year,y=Words,color=Party))+
geom_smooth(mapping = aes(x=year,y=Words),method="lm",se=F)+
labs(list(title = "Speech Length (without outliers)", x = "Year", y = "words in speech"))+
theme(plot.title = element_text(size = 20, face = "bold",hjust = 0.5))
speech.list.new=speech.list[-which.max(speech.list$Words),]
speech.list.new=speech.list.new[-which.min(speech.list.new$Words),]
#plot the speech length (without outliers) vs year
ggplot(data = speech.list.new)+
geom_point(mapping = aes(x=year,y=Words,color=Party))+
geom_smooth(mapping = aes(x=year,y=Words),method="lm",se=F)+
labs(list(title = "Speech Length (in words) (without outliers)", x = "Year", y = "words in speech"))+
theme(plot.title = element_text(size = 20, face = "bold",hjust = 0.5))
speech.list.new=speech.list[-which.max(speech.list$Words),]
speech.list.new=speech.list.new[-which.min(speech.list.new$Words),]
#plot the speech length (without outliers) vs year
ggplot(data = speech.list.new)+
geom_point(mapping = aes(x=year,y=Words,color=Party))+
geom_smooth(mapping = aes(x=year,y=Words),method="lm",se=F)+
labs(list(title = "Speech Length (in words, without outliers)", x = "Year", y = "words in speech"))+
theme(plot.title = element_text(size = 20, face = "bold",hjust = 0.5))
speech.list$sentence=tapply(sentence.list$sent.id,sentence.list$year,length)
ggplot(data = speech.list)+
geom_point(mapping = aes(x=year,y=sentence,color=Party))+
geom_smooth(aes(x=year,y=sentence),se=F,method="lm")+
labs(list(title = "Speech Length (in secences)", x = "Year", y = "words in speech"))+
theme(plot.title = element_text(size = 20, face = "bold",hjust = 0.5))
speech.list$word.count=tapply(sentence.list$word.count,sentence.list$year,mean)
ggplot(data = speech.list)+
geom_point(mapping = aes(x=year,y=word.count,color=Party))+
geom_smooth(mapping = aes(x=year,y=word.count),se=F,method="lm")
labs(list(title = "Average Sentence Length (in words)", x = "Year", y = "sentences in speech"))+
theme(plot.title = element_text(size = 20, face = "bold",hjust = 0.5))
speech.list$word.count=tapply(sentence.list$word.count,sentence.list$year,mean)
ggplot(data = speech.list)+
geom_point(mapping = aes(x=year,y=word.count,color=Party))+
geom_smooth(mapping = aes(x=year,y=word.count),se=F,method="lm")+
labs(list(title = "Average Sentence Length (in words)", x = "Year", y = "sentences in speech"))+
theme(plot.title = element_text(size = 20, face = "bold",hjust = 0.5))
Demo=speech.list[speech.list$Party=="Democratic",]
Demo=Demo[!is.na(Demo$President),]
Repub=speech.list[speech.list$Party=="Republican",]
Repub=Repub[!is.na(Repub$President),]
Demo.Repub=rbind(Demo,Repub)
ggplot(data = Demo.Repub,mapping = aes(x=year,y=Words,color=Party))+
geom_point()+
geom_smooth(se=F)
ggplot(data = Demo.Repub,mapping = aes(x=year,y=sentence,color=Party))+
geom_point()+
geom_smooth(se=F)
ggplot(data = Demo.Repub,mapping = aes(x=year,y=word.count,color=Party))+
geom_point()+
geom_smooth(se=F)
packages.used=c("rvest", "xml2", "qdap",
"syuzhet", "ggplot2", "tm",
"tidytext","reshape2")
# check packages that need to be installed.
packages.needed=setdiff(packages.used,
intersect(installed.packages()[,1],
packages.used))
# install additional packages
if(length(packages.needed)>0){
install.packages(packages.needed, dependencies = TRUE)
}
# load packages
library("rvest")
library("xml2")
library("qdap")
library("syuzhet")
library("ggplot2")
library("tm")
library("tidytext")
library("reshape2")
source("../lib/speechFuncs.R")
print(R.version)
main.page <- read_html(x = "http://www.presidency.ucsb.edu/inaugurals.php")
# Get link URLs
# f.speechlinks is a function for extracting links from the list of speeches.
inaug=f.speechlinks(main.page)
inaug=inaug[-nrow(inaug),] # remove the last line, irrelevant due to error.
#read in the csv data set
inaug.list=read.csv("../data/inauglist.csv", stringsAsFactors = FALSE)
speech.list=cbind(inaug.list, inaug)
speech.list=speech.list[,-5]
#delete the date column due to formatting error
colnames(speech.list)[colnames(speech.list)=="links"]="Date"
#name the correct date
#abtract the year of the speech
speech.list$year = rep(NA,nrow(speech.list))
for ( i in 1:nrow(speech.list))
{  n = nchar(speech.list$Date[i])
speech.list$year[i] = as.numeric(substring(speech.list$Date[i],n-3,n))
}
# Loop over each row in speech.list
speech.list$fulltext=NA
for(i in seq(nrow(speech.list))) {
text <- read_html(speech.list$urls[i]) %>% # load the page
html_nodes(".displaytext") %>% # isloate the text
html_text() # get the text
speech.list$fulltext[i]=text
# Create the file name
filename <- paste0("../data/InauguralSpeeches/",
speech.list$File[i], "-",
speech.list$Term[i], ".txt")
sink(file = filename) %>% # open file to write
cat(text)  # write the file
sink() # close the file
}
sentence.list=NULL
for(i in 1:nrow(speech.list)){
sentences=sent_detect(speech.list$fulltext[i],
endmarks = c("?", ".", "!", "|",";"))
if(length(sentences)>0){
word.count=word_count(sentences)
sentence.list=rbind(sentence.list,
cbind(speech.list[i,-ncol(speech.list)],
sentences=as.character(sentences),
word.count,
sent.id=1:length(sentences)
)
)
}
}
sentence.list=sentence.list[!is.na(sentence.list$word.count),]
#delete lines of non-sentences.
#plot the speech length vs year
ggplot(data = speech.list)+
geom_point(mapping = aes(x=year,y=Words,color=Party))+
geom_smooth(mapping = aes(x=year,y=Words),method="lm",se=F)+
labs(list(title = "Speech Length (in words)", x = "Year", y = "words in speech"))+
theme(plot.title = element_text(size = 20, face = "bold",hjust = 0.5))
speech.list[which.max(speech.list$Words),c("President","year","Words")]
speech.list[which.min(speech.list$Words),c("President","year","Words")]
speech.list.new=speech.list[-which.max(speech.list$Words),]
speech.list.new=speech.list.new[-which.min(speech.list.new$Words),]
#plot the speech length (without outliers) vs year
ggplot(data = speech.list.new)+
geom_point(mapping = aes(x=year,y=Words,color=Party))+
geom_smooth(mapping = aes(x=year,y=Words),method="lm",se=F)+
labs(list(title = "Speech Length (in words, without outliers)", x = "Year", y = "words in speech"))+
theme(plot.title = element_text(size = 20, face = "bold",hjust = 0.5))
speech.list$sentence=tapply(sentence.list$sent.id,sentence.list$year,length)
ggplot(data = speech.list)+
geom_point(mapping = aes(x=year,y=sentence,color=Party))+
geom_smooth(aes(x=year,y=sentence),se=F,method="lm")+
labs(list(title = "Speech Length (in secences)", x = "Year", y = "sentences in speech"))+
theme(plot.title = element_text(size = 20, face = "bold",hjust = 0.5))
speech.list$word.count=tapply(sentence.list$word.count,sentence.list$year,mean)
ggplot(data = speech.list)+
geom_point(mapping = aes(x=year,y=word.count,color=Party))+
geom_smooth(mapping = aes(x=year,y=word.count),se=F,method="lm")+
labs(list(title = "Average Sentence Length (in words)", x = "Year", y = "sentences in speech"))+
theme(plot.title = element_text(size = 20, face = "bold",hjust = 0.5))
Demo=speech.list[speech.list$Party=="Democratic",]
Demo=Demo[!is.na(Demo$President),]
Repub=speech.list[speech.list$Party=="Republican",]
Repub=Repub[!is.na(Repub$President),]
Demo.Repub=rbind(Demo,Repub)
ggplot(data = Demo.Repub,mapping = aes(x=year,y=Words,color=Party))+
geom_point()+
geom_smooth(se=F)
ggplot(data = Demo.Repub,mapping = aes(x=year,y=sentence,color=Party))+
geom_point()+
geom_smooth(se=F)
ggplot(data = Demo.Repub,mapping = aes(x=year,y=word.count,color=Party))+
geom_point()+
geom_smooth(method="lm",se=F)
Demo=speech.list[speech.list$Party=="Democratic",]
Demo=Demo[!is.na(Demo$President),]
Repub=speech.list[speech.list$Party=="Republican",]
Repub=Repub[!is.na(Repub$President),]
Demo.Repub=rbind(Demo,Repub)
ggplot(data = Demo.Repub,mapping = aes(x=year,y=Words,color=Party))+
geom_point()+
geom_smooth(se=F)
ggplot(data = Demo.Repub,mapping = aes(x=year,y=sentence,color=Party))+
geom_point()+
geom_smooth(se=F)
ggplot(data = Demo.Repub,mapping = aes(x=year,y=word.count,color=Party))+
geom_point()+
geom_smooth(se=F)
folder.path="../data/InauguralSpeeches/"
fulltext<-Corpus(DirSource(folder.path))
fulltext<-tm_map(fulltext, stripWhitespace)
fulltext<-tm_map(fulltext, content_transformer(tolower))
fulltext<-tm_map(fulltext, removeWords, stopwords("english"))
fulltext<-tm_map(fulltext, removeWords, character(0))
fulltext<-tm_map(fulltext, removePunctuation)
fulltext<-tm_map(fulltext, stemDocument)
text<-tm_map(fulltext, stripWhitespace)
fulltext<-tm_map(fulltext, removePunctuation)
fulltext<-tm_map(fulltext, removeNumbers)
fulltext<-tm_map(fulltext, PlainTextDocument)
dtm <- DocumentTermMatrix(fulltext)
dtms <- removeSparseTerms(dtm, 0.1)
freq <- sort(colSums(as.matrix(dtm)), decreasing=TRUE)
wf <- data.frame(word=names(freq), freq=freq)
ggplot(subset(wf, freq>300), aes(word, freq))+
geom_bar(stat="identity")+
theme(axis.text.x=element_text(angle=45, hjust=1))
wf[which.max(wf$freq),]
for (i in 1:nrow(speech.list))
{
speech.list$great[i]=length(gregexpr("great",speech.list$fulltext[i])[[1]])/speech.list$Words[i]*100
}
ggplot(data=speech.list,aes(x=year,y=great))+
geom_bar(stat="identity")
speech.list[which.max(speech.list$great),c("President","Date","great")]
# He used 1 great among 120 words.
for (i in 1:nrow(speech.list))
{
speech.list$great[i]=length(gregexpr("great",speech.list$fulltext[i])[[1]])
}
ggplot(data=speech.list,aes(x=year,y=great))+
geom_bar(stat="identity")
speech.list[which.max(speech.list$great),c("President","Date","great")]
# He used 1 great among 120 words.
for (i in 1:nrow(speech.list))
{
speech.list$great[i]=length(gregexpr("great",speech.list$fulltext[i])[[1]])/speech.list$Words[i]*100
}
ggplot(data=speech.list,aes(x=year,y=great))+
geom_bar(stat="identity")
speech.list[which.max(speech.list$great),c("President","Date","great")]
# He used 1 great among 120 words.
